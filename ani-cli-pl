#!/bin/sh

version_number="0.0.3"
AUTH="X2d1ZXN0XzowLDUsMjEwMDAwMDAsMjU1LDQxNzQyOTM2NDQ%3D"
COOKIE_JAR="/tmp/ani-cli-pl.cookies"
HEADER_FILE="/tmp/ani-cli-pl.headers"

quit() {
  if [ $? -eq $1 ]; then
    exit 1
  fi
}

touch $COOKIE_JAR
cat << EOF > "$HEADER_FILE"
accept-language: pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7
accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
cache-control: max-age=0
cookie: _rnd=0000;
referer: https://shinden.pl/
sec-fetch-dest: document
sec-fetch-mode: navigate
sec-fetch-site: same-origin
sec-fetch-user: ?1
sec-gpc: 1
upgrade-insecure-requests: 1
user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36
EOF

sed -i -E "s/cookie: _rnd=[0-9]+;/cookie: _rnd=$(date +%s);/" $HEADER_FILE

search_anime() {
  local query=$(echo "$1" | sed 's/ /+/g')
  local url="https://shinden.pl/series?search=$query&one_online=true"
  local html=$(curl -s $url -H @$HEADER_FILE)
  local regex='(series|titles).\d+[^"]+'
  local matches=$(echo "$html" | sed 's/ /_/g' | grep -oE '/(series|titles)/[0-9]+.+' )

  anime_entries=""

  for match in $matches; do
    local url=$(echo $match | sed -E 's/".+//' )
    local title=$(echo $match | sed -E 's/.+">//' | sed -E 's/<[^>]+>//g' )
    local entry="$title::$url"

    anime_entries="$anime_entries\n$entry"
  done

  anime_entries=$(echo $anime_entries | sort)
}

select_anime() {
  selected_anime=$(echo $anime_entries | sed 's/ /\n/g' | sed -E 's/::.+//' | sed 's/_/ /g' | fzf --reverse )
  quit 130

  selected_anime="$(echo $selected_anime | sed 's/ /_/g' )::"

  selected_anime=$(echo $anime_entries | sed 's/ /\n/g' | grep $selected_anime)
  if [ -z $selected_anime ]; then
    exit 1
  fi
}

select_episode() {
  local query=$(echo $selected_anime | sed -E 's/.+:://')
  local url="https://shinden.pl$query/episodes"
  local html=$(curl -s $url -H @$HEADER_FILE)

  local matches=$(echo "$html" | sed 's/ /_/g' | grep -oE 'episode\/[0-9]+[^"]+')
  local n=$(echo $matches | sed 's/ /\n/g' | wc -l )

  local choices=""
  for i in $(seq 1 $n); do
    choices="$choices$i\n"
  done

  local selected=$(echo $choices | grep -v '^$' | fzf --reverse )
  quit 130

  selected=$(($n - $selected +1))

  episode_url=$(echo $matches | sed 's/ /\n/g' | sed -n "${selected}p")
  if [ -z $selected ]; then
    exit 1
  fi
}

select_player() {
  local url="https://shinden.pl/$episode_url"
  local html=$(curl -s $url -H @$HEADER_FILE)
  local matches=$(echo "$html" | sed 's/&quot;/"/g' | sed 's/ /_/g' | grep -oE 'player_data_[0-9]+.+username')
  local players=""

  for match in $matches; do
    local player_id=$(echo $match | sed -E 's/".+//' | sed -E 's/[^0-9]//g')
    local player_name=$(echo $match | sed -E 's/.+player":"//' | sed -E 's/".+//')

    players="$players\n$player_name::$player_id"
  done

  selected_player=$(echo $players | fzf --reverse )
  quit 130

  if [ -z $selected_player ]; then
    exit 1
  fi
}

get_video_link() {
  local playerid=$(echo $selected_player | sed -E 's/.+://')

  local url1="https://api4.shinden.pl/xhr/${playerid}/player_load?auth=${AUTH}"
  local url2="https://api4.shinden.pl/xhr/${playerid}/player_show?auth=${AUTH}&width=0&height=-1"
  
  local html=$(curl -s $url1 -H @$HEADER_FILE -c $COOKIE_JAR)
  for i in $(seq 5 -1 1); do
    echo "${i} seconds remaining..."
    sleep 1
  done

  response=$(curl -s -X GET $url2 -H @$HEADER_FILE -b $COOKIE_JAR)
  player_url="https:$(echo $response | sed -E 's/\&quot/"/g' | grep -oE '\/\/[^"]+' | head -n 1 | sed -E 's/\?.+//')"
}

open_url() {
  local url=$1
  local os_name=$(uname -a)

  echo "Opening url: $url"
  
  if echo "$os_name" | grep -q "Linux"; then
    xdg-open "$url"
  elif echo "$os_name" | grep -q "Darwin"; then
    open "$url"
  elif echo "$os_name" | grep -Eq "CYGWIN|MINGW|MSYS"; then
    start "$url"
  elif echo "$os_name" | grep -q "Android"; then
    termux-open-url "$url"
  else
    echo "Unsupported operating system: $os_name"
  fi
}

while [ -z "$query" ]; do
  printf "Search anime: " && read -r query
done

search_anime $query
select_anime
select_episode
select_player
get_video_link
open_url $player_url
